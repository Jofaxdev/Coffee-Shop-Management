@model Coffee_Shop_Management.Areas.Admin.ViewModels.InventoryDetailReportItemVM
@using Coffee_Shop_Management.Models

@{
    var colorIn = "#E7F3E7";      // Nhập mua hàng / Tồn đầu
    var colorOut = "#FFF0F0";     // Xuất bán hàng
    var colorAdjIn = "#EBF5FF";   // Điều chỉnh tăng
    var colorAdjOut = "#FFF9E6";  // Điều chỉnh giảm
}

@functions {
    private string FormatNumber(decimal? number, bool isQuantity = false)
    {
        if (!number.HasValue) return "-";
        var culture = new System.Globalization.CultureInfo("vi-VN");
        if (isQuantity)
        {
            if (number.Value == Math.Truncate(number.Value)) return number.Value.ToString("N0", culture);
            return number.Value.ToString("N4", culture).TrimEnd('0').TrimEnd(culture.NumberFormat.NumberDecimalSeparator[0]);
        }
        return number.Value.ToString("N0", culture);
    }
}

<style>
    /* Các style giữ nguyên như cũ, không cần thay đổi */
    .preview-table-detail {
        width: 100%;
        border-collapse: collapse;
        background-color: #fff;
        font-size: 13px;
        font-family: Calibri, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

        .preview-table-detail th, .preview-table-detail td {
            border: 1px solid #ddd;
            padding: 6px 8px;
            vertical-align: middle;
        }

        .preview-table-detail thead th {
            background-color: #f8f9fa;
            font-weight: 600;
            text-align: center;
            position: sticky;
            top: -1px;
            z-index: 1;
        }

        .preview-table-detail .wrap-text {
            white-space: normal;
            word-break: break-word;
        }

        .preview-table-detail .text-right {
            text-align: right;
        }

        .preview-table-detail .text-center {
            text-align: center;
        }

        .preview-table-detail .text-left {
            text-align: left;
        }

    .ref-cost-price {
        font-style: italic;
        color: #6c757d;
    }
</style>

<div>
    <div class="p-3 mb-3 bg-white rounded shadow-sm border-start border-primary border-5">
        <h4 class="mb-1">Thẻ kho: @Model.IngredientName</h4>
        <p class="mb-0 text-muted">Mã NVL: @Model.IngredientCode | Kỳ báo cáo: @Model.PeriodStartDate.ToString("dd/MM/yyyy") - @Model.PeriodEndDate.ToString("dd/MM/yyyy")</p>
    </div>

    <table class="table table-bordered table-hover preview-table-detail">
        <thead class="table-light">
            <tr>
                <th style="min-width: 140px;">Ngày GD</th>
                <th style="min-width: 120px;">Mã Phiếu</th>
                <th style="min-width: 150px;">Loại GD/Diễn giải</th>
                <th style="min-width: 140px;">Người TH</th>
                <th style="min-width: 150px;">NCC</th>
                <th class="text-end" style="min-width: 90px;">SL Nhập</th>
                <th class="text-end" style="min-width: 100px;">ĐG Nhập / Giá vốn</th>
                <th class="text-end" style="min-width: 110px;">TT Nhập</th>
                <th class="text-end" style="min-width: 90px;">SL Xuất</th>
                <th class="text-end" style="min-width: 100px;">ĐG Bán</th>
                <th class="text-end" style="min-width: 110px;">TT Xuất</th>
                <th class="text-end" style="min-width: 100px;">SL Tồn</th>
                <th style="min-width: 180px;">Ghi Chú</th>
            </tr>
        </thead>
        <tbody>
            @* ----- THAY ĐỔI: Bỏ in nghiêng ----- *@
            <tr style="font-weight: bold; background-color: #f8f9fa;">
                <td colspan="11" class="text-center">Tồn đầu kỳ</td>
                <td class="text-right">@FormatNumber(Model.OpeningStockQuantity, true)</td>
                <td></td>
            </tr>

            @foreach (var trans in Model.Transactions)
            {
                string rowColor = "transparent";
                switch (trans.TransactionType)
                {
                    case AppDbContext.InventoryTransactionType.Purchase:
                    case AppDbContext.InventoryTransactionType.InitialStock:
                        rowColor = colorIn;
                        break;
                    case AppDbContext.InventoryTransactionType.AdjustmentIn:
                        rowColor = colorAdjIn;
                        break;
                    case AppDbContext.InventoryTransactionType.SaleConsumption:
                        rowColor = colorOut;
                        break;
                    case AppDbContext.InventoryTransactionType.AdjustmentOut:
                        rowColor = colorAdjOut;
                        break;
                }

                <tr style="background-color: @rowColor">
                    <td class="text-center">@trans.TransactionDate.ToString("dd/MM/yyyy HH:mm")</td>
                    <td class="text-center">@trans.VoucherCode</td>
                    <td>@trans.TransactionTypeDisplay</td>
                    <td>@trans.UserName</td>
                    <td>@trans.SupplierName</td>

                    @* ----- THAY ĐỔI: Bỏ màu xanh/đỏ, chỉ giữ lại in đậm ----- *@
                    <td class="text-right fw-bold">@FormatNumber(trans.QuantityIn, true)</td>

                    <td class="text-right">
                        @if (trans.TransactionType == AppDbContext.InventoryTransactionType.SaleConsumption || trans.TransactionType == AppDbContext.InventoryTransactionType.AdjustmentOut)
                        {
                            <span class="ref-cost-price" title="Giá vốn của lô hàng đã xuất">@FormatNumber(trans.CostPriceOut)</span>
                        }
                        else
                        {
                            @FormatNumber(trans.UnitPriceIn)
                        }
                    </td>
                    <td class="text-right">@FormatNumber(trans.ValueIn)</td>

                    @* ----- THAY ĐỔI: Bỏ màu xanh/đỏ, chỉ giữ lại in đậm ----- *@
                    <td class="text-right fw-bold">@FormatNumber(trans.QuantityOut, true)</td>

                    <td class="text-right">@FormatNumber(trans.UnitPriceOut)</td>
                    <td class="text-right">@FormatNumber(trans.ValueOut)</td>
                    <td class="text-right fw-bold">@FormatNumber(trans.StockAfterTransaction, true)</td>
                    <td class="wrap-text">@trans.Notes</td>
                </tr>
            }
            <tr style="font-weight: bold; background-color: #FFF2CC;">
                <td colspan="5" class="text-center">Tổng cộng phát sinh</td>
                <td class="text-right">@FormatNumber(Model.TotalQuantityIn, true)</td>
                <td></td>
                <td class="text-right">@FormatNumber(Model.TotalValueIn)</td>
                <td class="text-right">@FormatNumber(Model.TotalQuantityOut, true)</td>
                <td></td>
                <td class="text-right">@FormatNumber(Model.TotalValueOut)</td>
                <td colspan="2"></td>
            </tr>
            @* ----- THAY ĐỔI: Bỏ in nghiêng ----- *@
            <tr style="font-weight: bold; background-color: #f8f9fa;">
                <td colspan="11" class="text-center">Tồn cuối kỳ</td>
                <td class="text-right">@FormatNumber(Model.ClosingStockQuantity, true)</td>
                <td></td>
            </tr>
        </tbody>
    </table>
</div>